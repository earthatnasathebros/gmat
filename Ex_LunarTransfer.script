%  Script Mission - Lunar Transfer Example
%
%  This script demonstrates how to set up a lunar transfer mission
%


%----------------------------------------
%---------- Solar System User-Modified Values
%----------------------------------------

GMAT SolarSystem.EphemerisSource = 'SPICE';
GMAT SolarSystem.SPKFilename = 'C:/Users/Christopher Russell/OneDrive - Otago Polytechnic/Desktop/GMAT/bin/../data/planetary_ephem/spk/DE421AllPlanets.bsp';
%----------------------------------------
%---------- Spacecraft
%----------------------------------------

Create Spacecraft Sat;
GMAT Sat.DateFormat = UTCGregorian;
GMAT Sat.Epoch = '22 Jul 2014 11:29:10.811';
GMAT Sat.CoordinateSystem = EarthMJ2000Eq;
GMAT Sat.DisplayStateType = Cartesian;
GMAT Sat.X = -137380.1984338506;
GMAT Sat.Y = 75679.87867537055;
GMAT Sat.Z = 21487.63875187856;
GMAT Sat.VX = -0.2324532014235503;
GMAT Sat.VY = -0.4462753967758019;
GMAT Sat.VZ = 0.08561205662877103;
GMAT Sat.DryMass = 1000;
GMAT Sat.Cd = 2.2;
GMAT Sat.Cr = 1.7;
GMAT Sat.DragArea = 15;
GMAT Sat.SRPArea = 1;
GMAT Sat.SPADDragScaleFactor = 1;
GMAT Sat.SPADSRPScaleFactor = 1;
GMAT Sat.PowerSystem = SolarPowerSystem1;
GMAT Sat.NAIFId = -10003001;
GMAT Sat.NAIFIdReferenceFrame = -9003001;
GMAT Sat.OrbitColor = Red;
GMAT Sat.TargetColor = Teal;
GMAT Sat.OrbitErrorCovariance = [ 1e+70 0 0 0 0 0 ; 0 1e+70 0 0 0 0 ; 0 0 1e+70 0 0 0 ; 0 0 0 1e+70 0 0 ; 0 0 0 0 1e+70 0 ; 0 0 0 0 0 1e+70 ];
GMAT Sat.CdSigma = 1e+70;
GMAT Sat.CrSigma = 1e+70;
GMAT Sat.Id = 'SatId';
GMAT Sat.Attitude = CoordinateSystemFixed;
GMAT Sat.SPADSRPInterpolationMethod = Bilinear;
GMAT Sat.SPADSRPScaleFactorSigma = 1e+70;
GMAT Sat.SPADDragInterpolationMethod = Bilinear;
GMAT Sat.SPADDragScaleFactorSigma = 1e+70;
GMAT Sat.ModelFile = 'C:\Users\Christopher Russell\OneDrive - Otago Polytechnic\Desktop\GMAT\samples\cubesatspectra1.3ds';
GMAT Sat.ModelOffsetX = 0;
GMAT Sat.ModelOffsetY = 0;
GMAT Sat.ModelOffsetZ = 0;
GMAT Sat.ModelRotationX = 0;
GMAT Sat.ModelRotationY = 0;
GMAT Sat.ModelRotationZ = 0;
GMAT Sat.ModelScale = 1;
GMAT Sat.AttitudeDisplayStateType = 'Quaternion';
GMAT Sat.AttitudeRateDisplayStateType = 'AngularVelocity';
GMAT Sat.AttitudeCoordinateSystem = EarthMJ2000Eq;
GMAT Sat.EulerAngleSequence = '321';

%----------------------------------------
%---------- Hardware Components
%----------------------------------------

Create SolarPowerSystem SolarPowerSystem1;
GMAT SolarPowerSystem1.EpochFormat = 'UTCGregorian';
GMAT SolarPowerSystem1.InitialEpoch = ''01 Jan 2000 11:59:28.000'';
GMAT SolarPowerSystem1.InitialMaxPower = 1.2;
GMAT SolarPowerSystem1.AnnualDecayRate = 5;
GMAT SolarPowerSystem1.Margin = 5;
GMAT SolarPowerSystem1.BusCoeff1 = 0.3;
GMAT SolarPowerSystem1.BusCoeff2 = 0;
GMAT SolarPowerSystem1.BusCoeff3 = 0;
GMAT SolarPowerSystem1.ShadowModel = 'DualCone';
GMAT SolarPowerSystem1.ShadowBodies = {'Earth'};
GMAT SolarPowerSystem1.SolarCoeff1 = 1.32077;
GMAT SolarPowerSystem1.SolarCoeff2 = -0.10848;
GMAT SolarPowerSystem1.SolarCoeff3 = -0.11665;
GMAT SolarPowerSystem1.SolarCoeff4 = 0.10843;
GMAT SolarPowerSystem1.SolarCoeff5 = -0.01279;






%----------------------------------------
%---------- transponder
%----------------------------------------
Create Antenna HGA;  %High Gain Antenna
GMAT HGA.DirectionX = 1;
GMAT HGA.DirectionY = 0;
GMAT HGA.DirectionZ = 0;
GMAT HGA.SecondDirectionX = 0;
GMAT HGA.SecondDirectionY = 1;
GMAT HGA.SecondDirectionZ = 0;
GMAT HGA.HWOriginInBCSX = 0;
GMAT HGA.HWOriginInBCSY = 0;
GMAT HGA.HWOriginInBCSZ = 0;

Create Transponder SatTransponder;
GMAT SatTransponder.HardwareDelay = 1e-06;
GMAT SatTransponder.PrimaryAntenna = SatTranponderAntenna;
GMAT SatTransponder.TurnAroundRatio = '880/749';

Create Transmitter DSNTransmitter;
GMAT DSNTransmitter.PrimaryAntenna = DSNTransmitterAntenna;
GMAT DSNTransmitter.Frequency = 7200;

Create Receiver DSNReceiver;
GMAT DSNReceiver.PrimaryAntenna = DSNReceiverAntenna;
GMAT DSNReceiver.Id = '0';

Create Antenna DSNAntenna;
GMAT DSNAntenna.DirectionX = 1;
GMAT DSNAntenna.DirectionY = 0;
GMAT DSNAntenna.DirectionZ = 0;
GMAT DSNAntenna.SecondDirectionX = 0;
GMAT DSNAntenna.SecondDirectionY = 1;
GMAT DSNAntenna.SecondDirectionZ = 0;
GMAT DSNAntenna.HWOriginInBCSX = 0;
GMAT DSNAntenna.HWOriginInBCSY = 0;
GMAT DSNAntenna.HWOriginInBCSZ = 0;

% Attach the FOV object to an antenna
Create Antenna antenna1;
GMAT antenna1.FieldOfView = cone1;
GMAT antenna1.DirectionX = 1;
GMAT antenna1.DirectionY = 0;
GMAT antenna1.DirectionZ = 0;
GMAT antenna1.SecondDirectionX = 0;
GMAT antenna1.SecondDirectionY = 1;
GMAT antenna1.SecondDirectionZ = 0;
GMAT antenna1.HWOriginInBCSX = 0;
GMAT antenna1.HWOriginInBCSY = 0;
GMAT antenna1.HWOriginInBCSZ = 0;

Create Antenna SatTranponderAntenna;
GMAT SatTranponderAntenna.DirectionX = 1;
GMAT SatTranponderAntenna.DirectionY = 0;
GMAT SatTranponderAntenna.DirectionZ = 0;
GMAT SatTranponderAntenna.SecondDirectionX = 0;
GMAT SatTranponderAntenna.SecondDirectionY = 1;
GMAT SatTranponderAntenna.SecondDirectionZ = 0;
GMAT SatTranponderAntenna.HWOriginInBCSX = 0;
GMAT SatTranponderAntenna.HWOriginInBCSY = 0;
GMAT SatTranponderAntenna.HWOriginInBCSZ = 0;

Create Antenna DSNReceiverAntenna;
GMAT DSNReceiverAntenna.DirectionX = 1;
GMAT DSNReceiverAntenna.DirectionY = 0;
GMAT DSNReceiverAntenna.DirectionZ = 0;
GMAT DSNReceiverAntenna.SecondDirectionX = 0;
GMAT DSNReceiverAntenna.SecondDirectionY = 1;
GMAT DSNReceiverAntenna.SecondDirectionZ = 0;
GMAT DSNReceiverAntenna.HWOriginInBCSX = 0;
GMAT DSNReceiverAntenna.HWOriginInBCSY = 0;
GMAT DSNReceiverAntenna.HWOriginInBCSZ = 0;

Create Antenna DSNTransmitterAntenna;
GMAT DSNTransmitterAntenna.DirectionX = 1;
GMAT DSNTransmitterAntenna.DirectionY = 0;
GMAT DSNTransmitterAntenna.DirectionZ = 0;
GMAT DSNTransmitterAntenna.SecondDirectionX = 0;
GMAT DSNTransmitterAntenna.SecondDirectionY = 1;
GMAT DSNTransmitterAntenna.SecondDirectionZ = 0;
GMAT DSNTransmitterAntenna.HWOriginInBCSX = 0;
GMAT DSNTransmitterAntenna.HWOriginInBCSY = 0;
GMAT DSNTransmitterAntenna.HWOriginInBCSZ = 0;

% Create an antenna and attache a FOV
Create Antenna myAntenna;
GMAT myAntenna.FieldOfView = coneFOV;

% Define the antenna boresight direction in body coordinates
GMAT myAntenna.DirectionX = 1;
GMAT myAntenna.DirectionY = 0;
GMAT myAntenna.DirectionZ = 0;

% Define the vector to resolve orientation about boresight
GMAT myAntenna.SecondDirectionX = 0;
GMAT myAntenna.SecondDirectionY = 1;
GMAT myAntenna.SecondDirectionZ = 0;

% Define the location of antenna in body coordinates
GMAT myAntenna.HWOriginInBCSX = 100;
GMAT myAntenna.HWOriginInBCSY = -100;
GMAT myAntenna.HWOriginInBCSZ = 0;

%----------------------------------------
%---------- FieldOfView Components
%----------------------------------------
% Create the ConicalFOV object
Create ConicalFOV cone1;
GMAT cone1.Color = [0 0 255];
GMAT cone1.Alpha = 255;  %the field of view is fully opaque
GMAT cone1.FieldOfViewAngle = 59.99999999999999;
% Define a conical FOV
Create ConicalFOV coneFOV;
GMAT coneFOV.Color = [0 0 0];
GMAT coneFOV.Alpha = 255;
GMAT coneFOV.FieldOfViewAngle = 20;

%----------------------------------------
%---------- GroundStations
%----------------------------------------
Create GroundStation DSN;
GMAT DSN.OrbitColor = Thistle;
GMAT DSN.TargetColor = DarkGray;
GMAT DSN.CentralBody = Luna;
GMAT DSN.StateType = Cartesian;
GMAT DSN.HorizonReference = Sphere;
GMAT DSN.Location1 = 6378.1363;
GMAT DSN.Location2 = 0;
GMAT DSN.Location3 = 0;
GMAT DSN.Id = 'StationId';
GMAT DSN.AddHardware = {DSNTransmitter, DSNReceiver, DSNTransmitterAntenna, DSNReceiverAntenna};
GMAT DSN.IonosphereModel = 'None';
GMAT DSN.TroposphereModel = 'None';
GMAT DSN.DataSource = 'Constant';
GMAT DSN.Temperature = 295.1;
GMAT DSN.Pressure = 1013.5;
GMAT DSN.Humidity = 55;
GMAT DSN.MinimumElevationAngle = 7;

Create GroundStation GroundStation1;
GMAT GroundStation1.OrbitColor = Thistle;
GMAT GroundStation1.TargetColor = DarkGray;
GMAT GroundStation1.CentralBody = Earth;
GMAT GroundStation1.StateType = Cartesian;
GMAT GroundStation1.HorizonReference = Sphere;
GMAT GroundStation1.Location1 = 6378.1363;
GMAT GroundStation1.Location2 = 0;
GMAT GroundStation1.Location3 = 0;
GMAT GroundStation1.Id = 'StationId';
GMAT GroundStation1.IonosphereModel = 'None';
GMAT GroundStation1.TroposphereModel = 'None';
GMAT GroundStation1.DataSource = 'Constant';
GMAT GroundStation1.Temperature = 295.1;
GMAT GroundStation1.Pressure = 1013.5;
GMAT GroundStation1.Humidity = 55;
GMAT GroundStation1.MinimumElevationAngle = 7;


%----------------------------------------
%---------- Propagators
%----------------------------------------

Create ForceModel AllForces;
GMAT AllForces.CentralBody = Earth;
GMAT AllForces.PrimaryBodies = {Earth};
GMAT AllForces.PointMasses = {Sun, Luna, Venus, Mars, Jupiter, Saturn, Uranus, Neptune};
GMAT AllForces.SRP = On;
GMAT AllForces.RelativisticCorrection = Off;
GMAT AllForces.ErrorControl = RSSStep;
GMAT AllForces.GravityField.Earth.Degree = 20;
GMAT AllForces.GravityField.Earth.Order = 20;
GMAT AllForces.GravityField.Earth.StmLimit = 100;
GMAT AllForces.GravityField.Earth.PotentialFile = 'JGM2.cof';
GMAT AllForces.GravityField.Earth.TideModel = 'None';
GMAT AllForces.SRP.Flux = 1367;
GMAT AllForces.SRP.SRPModel = Spherical;
GMAT AllForces.SRP.Nominal_Sun = 149597870.691;
GMAT AllForces.Drag.AtmosphereModel = MSISE90;
GMAT AllForces.Drag.HistoricWeatherSource = 'ConstantFluxAndGeoMag';
GMAT AllForces.Drag.PredictedWeatherSource = 'ConstantFluxAndGeoMag';
GMAT AllForces.Drag.CSSISpaceWeatherFile = '../samples/SupportFiles/CSSI_2004To2026.txt';
GMAT AllForces.Drag.SchattenFile = 'SchattenPredict.txt';
GMAT AllForces.Drag.F107 = 150;
GMAT AllForces.Drag.F107A = 150;
GMAT AllForces.Drag.MagneticIndex = 3;
GMAT AllForces.Drag.SchattenErrorModel = 'Nominal';
GMAT AllForces.Drag.SchattenTimingModel = 'NominalCycle';
GMAT AllForces.Drag.DragModel = 'Spherical';

Create ForceModel MoonAllForces;
GMAT MoonAllForces.CentralBody = Luna;
GMAT MoonAllForces.PrimaryBodies = {Luna};
GMAT MoonAllForces.PointMasses = {Sun, Earth, Venus, Mars, Jupiter, Saturn, Uranus, Neptune};
GMAT MoonAllForces.Drag = None;
GMAT MoonAllForces.SRP = On;
GMAT MoonAllForces.RelativisticCorrection = Off;
GMAT MoonAllForces.ErrorControl = RSSStep;
GMAT MoonAllForces.GravityField.Luna.Degree = 20;
GMAT MoonAllForces.GravityField.Luna.Order = 20;
GMAT MoonAllForces.GravityField.Luna.StmLimit = 100;
GMAT MoonAllForces.GravityField.Luna.PotentialFile = 'LP165P.cof';
GMAT MoonAllForces.GravityField.Luna.TideModel = 'None';
GMAT MoonAllForces.SRP.Flux = 1367;
GMAT MoonAllForces.SRP.SRPModel = Spherical;
GMAT MoonAllForces.SRP.Nominal_Sun = 149597870.691;

%----------------------------------------
%---------- Propagators
%----------------------------------------

Create Propagator EarthFull;
GMAT EarthFull.FM = AllForces;
GMAT EarthFull.Type = RungeKutta89;
GMAT EarthFull.InitialStepSize = 60;
GMAT EarthFull.Accuracy = 9.999999999999999e-12;
GMAT EarthFull.MinStep = 0.001;
GMAT EarthFull.MaxStep = 45000;
GMAT EarthFull.MaxStepAttempts = 50;
GMAT EarthFull.StopIfAccuracyIsViolated = true;

Create Propagator MoonFull;
GMAT MoonFull.FM = MoonAllForces;
GMAT MoonFull.Type = RungeKutta89;
GMAT MoonFull.InitialStepSize = 60;
GMAT MoonFull.Accuracy = 9.999999999999999e-12;
GMAT MoonFull.MinStep = 0.001;
GMAT MoonFull.MaxStep = 15000;
GMAT MoonFull.MaxStepAttempts = 50;
GMAT MoonFull.StopIfAccuracyIsViolated = true;

%----------------------------------------
%---------- Burns
%----------------------------------------

Create ImpulsiveBurn TOI;
GMAT TOI.CoordinateSystem = Local;
GMAT TOI.Origin = Earth;
GMAT TOI.Axes = VNB;
GMAT TOI.Element1 = 0.14676929889;
GMAT TOI.Element2 = 0.046042675892;
GMAT TOI.Element3 = 0.090223244097;
GMAT TOI.DecrementMass = false;
GMAT TOI.Isp = 300;
GMAT TOI.GravitationalAccel = 9.81;

Create ImpulsiveBurn LOI;
GMAT LOI.CoordinateSystem = Local;
GMAT LOI.Origin = Luna;
GMAT LOI.Axes = VNB;
GMAT LOI.Element1 = -0.652;
GMAT LOI.Element2 = 0;
GMAT LOI.Element3 = 0;
GMAT LOI.DecrementMass = false;
GMAT LOI.Isp = 300;
GMAT LOI.GravitationalAccel = 9.81;

%----------------------------------------
%---------- Coordinate Systems
%----------------------------------------

Create CoordinateSystem EarthSunRot;
GMAT EarthSunRot.Origin = Earth;
GMAT EarthSunRot.Axes = ObjectReferenced;
GMAT EarthSunRot.XAxis = R;
GMAT EarthSunRot.ZAxis = N;
GMAT EarthSunRot.Primary = Sun;
GMAT EarthSunRot.Secondary = Earth;

Create CoordinateSystem MoonMJ2000Eq;
GMAT MoonMJ2000Eq.Origin = Luna;
GMAT MoonMJ2000Eq.Axes = MJ2000Eq;

Create CoordinateSystem EarthMoonRot;
GMAT EarthMoonRot.Origin = Luna;
GMAT EarthMoonRot.Axes = ObjectReferenced;
GMAT EarthMoonRot.XAxis = R;
GMAT EarthMoonRot.ZAxis = N;
GMAT EarthMoonRot.Primary = Earth;
GMAT EarthMoonRot.Secondary = Luna;

%----------------------------------------
%---------- EventLocators
%----------------------------------------

Create ContactLocator ContactLocator1;
GMAT ContactLocator1.Target = Sat;
GMAT ContactLocator1.Filename = 'ContactLocator1.txt';
GMAT ContactLocator1.InputEpochFormat = 'TAIModJulian';
GMAT ContactLocator1.InitialEpoch = '21545';
GMAT ContactLocator1.StepSize = 10;
GMAT ContactLocator1.FinalEpoch = '21545.138';
GMAT ContactLocator1.UseLightTimeDelay = true;
GMAT ContactLocator1.UseStellarAberration = true;
GMAT ContactLocator1.WriteReport = true;
GMAT ContactLocator1.RunMode = Automatic;
GMAT ContactLocator1.UseEntireInterval = true;
GMAT ContactLocator1.Observers = {DSN, GroundStation1};
GMAT ContactLocator1.LightTimeDirection = Receive;

Create ContactLocator ContactLocator2;
GMAT ContactLocator2.Target = Sat;
GMAT ContactLocator2.Filename = 'ContactLocator2.txt';
GMAT ContactLocator2.InputEpochFormat = 'TAIModJulian';
GMAT ContactLocator2.InitialEpoch = '21545';
GMAT ContactLocator2.StepSize = 10;
GMAT ContactLocator2.FinalEpoch = '21545.138';
GMAT ContactLocator2.UseLightTimeDelay = true;
GMAT ContactLocator2.UseStellarAberration = true;
GMAT ContactLocator2.WriteReport = true;
GMAT ContactLocator2.RunMode = Automatic;
GMAT ContactLocator2.UseEntireInterval = true;
GMAT ContactLocator2.Observers = {DSN, GroundStation1};
GMAT ContactLocator2.LightTimeDirection = Transmit;

%----------------------------------------
%---------- Solvers
%----------------------------------------

Create DifferentialCorrector DC1;
GMAT DC1.ShowProgress = true;
GMAT DC1.ReportStyle = Normal;
GMAT DC1.ReportFile = 'DifferentialCorrectorDC1.data';
GMAT DC1.MaximumIterations = 25;
GMAT DC1.DerivativeMethod = ForwardDifference;
GMAT DC1.Algorithm = NewtonRaphson;

%----------------------------------------
%---------- Subscribers
%----------------------------------------

Create OrbitView EarthInertialView;
GMAT EarthInertialView.SolverIterations = Current;
GMAT EarthInertialView.UpperLeft = [ 0.3066037735849056 0.001275510204081633 ];
GMAT EarthInertialView.Size = [ 0.3584905660377358 0.4540816326530612 ];
GMAT EarthInertialView.RelativeZOrder = 84;
GMAT EarthInertialView.Maximized = false;
GMAT EarthInertialView.Add = {Sat, Earth, Luna};
GMAT EarthInertialView.CoordinateSystem = EarthMJ2000Eq;
GMAT EarthInertialView.DrawObject = [ true true true ];
GMAT EarthInertialView.DataCollectFrequency = 1;
GMAT EarthInertialView.UpdatePlotFrequency = 50;
GMAT EarthInertialView.NumPointsToRedraw = 0;
GMAT EarthInertialView.ShowPlot = true;
GMAT EarthInertialView.MaxPlotPoints = 20000;
GMAT EarthInertialView.ShowLabels = true;
GMAT EarthInertialView.ViewPointReference = Earth;
GMAT EarthInertialView.ViewPointVector = [ 30000 -20000 10000 ];
GMAT EarthInertialView.ViewDirection = Earth;
GMAT EarthInertialView.ViewScaleFactor = 30;
GMAT EarthInertialView.ViewUpCoordinateSystem = EarthMJ2000Eq;
GMAT EarthInertialView.ViewUpAxis = Z;
GMAT EarthInertialView.EclipticPlane = Off;
GMAT EarthInertialView.XYPlane = On;
GMAT EarthInertialView.WireFrame = Off;
GMAT EarthInertialView.Axes = On;
GMAT EarthInertialView.Grid = Off;
GMAT EarthInertialView.SunLine = Off;
GMAT EarthInertialView.UseInitialView = On;
GMAT EarthInertialView.StarCount = 7000;
GMAT EarthInertialView.EnableStars = On;
GMAT EarthInertialView.EnableConstellations = On;

Create OrbitView MoonInertialView;
GMAT MoonInertialView.SolverIterations = Current;
GMAT MoonInertialView.UpperLeft = [ 0.3056603773584906 0.4604591836734694 ];
GMAT MoonInertialView.Size = [ 0.3584905660377358 0.4540816326530612 ];
GMAT MoonInertialView.RelativeZOrder = 88;
GMAT MoonInertialView.Maximized = false;
GMAT MoonInertialView.Add = {Sat, Earth, Luna};
GMAT MoonInertialView.CoordinateSystem = MoonMJ2000Eq;
GMAT MoonInertialView.DrawObject = [ true true true ];
GMAT MoonInertialView.DataCollectFrequency = 1;
GMAT MoonInertialView.UpdatePlotFrequency = 50;
GMAT MoonInertialView.NumPointsToRedraw = 0;
GMAT MoonInertialView.ShowPlot = true;
GMAT MoonInertialView.MaxPlotPoints = 20000;
GMAT MoonInertialView.ShowLabels = true;
GMAT MoonInertialView.ViewPointReference = Sat;
GMAT MoonInertialView.ViewPointVector = [ 0 0 30000 ];
GMAT MoonInertialView.ViewDirection = [ 0 0 -1 ];
GMAT MoonInertialView.ViewScaleFactor = 1;
GMAT MoonInertialView.ViewUpCoordinateSystem = MoonMJ2000Eq;
GMAT MoonInertialView.ViewUpAxis = Z;
GMAT MoonInertialView.EclipticPlane = Off;
GMAT MoonInertialView.XYPlane = On;
GMAT MoonInertialView.WireFrame = Off;
GMAT MoonInertialView.Axes = On;
GMAT MoonInertialView.Grid = Off;
GMAT MoonInertialView.SunLine = Off;
GMAT MoonInertialView.UseInitialView = On;
GMAT MoonInertialView.StarCount = 7000;
GMAT MoonInertialView.EnableStars = On;
GMAT MoonInertialView.EnableConstellations = On;

Create XYPlot RadApoPlot;
GMAT RadApoPlot.SolverIterations = None;
GMAT RadApoPlot.UpperLeft = [ 0.6273584905660378 0.1466836734693878 ];
GMAT RadApoPlot.Size = [ 0.3584905660377358 0.4540816326530612 ];
GMAT RadApoPlot.RelativeZOrder = 92;
GMAT RadApoPlot.Maximized = false;
GMAT RadApoPlot.XVariable = Sat.A1ModJulian;
GMAT RadApoPlot.YVariables = {Sat.RMAG};
GMAT RadApoPlot.ShowGrid = true;
GMAT RadApoPlot.ShowPlot = true;

Create GroundTrackPlot GroundTrackPlot1;
GMAT GroundTrackPlot1.SolverIterations = Current;
GMAT GroundTrackPlot1.UpperLeft = [ 0.02264150943396226 0.4158163265306122 ];
GMAT GroundTrackPlot1.Size = [ 0.3849056603773585 0.4502551020408163 ];
GMAT GroundTrackPlot1.RelativeZOrder = 108;
GMAT GroundTrackPlot1.Maximized = false;
GMAT GroundTrackPlot1.Add = {GroundStation1, Sat};
GMAT GroundTrackPlot1.DataCollectFrequency = 1;
GMAT GroundTrackPlot1.UpdatePlotFrequency = 50;
GMAT GroundTrackPlot1.NumPointsToRedraw = 0;
GMAT GroundTrackPlot1.ShowPlot = true;
GMAT GroundTrackPlot1.MaxPlotPoints = 20000;
GMAT GroundTrackPlot1.CentralBody = Earth;
GMAT GroundTrackPlot1.TextureMap = 'ModifiedBlueMarble.jpg';

Create XYPlot XYPlot1;
GMAT XYPlot1.SolverIterations = Current;
GMAT XYPlot1.UpperLeft = [ 0.3235849056603773 0.5548469387755102 ];
GMAT XYPlot1.Size = [ 0.3849056603773585 0.4502551020408163 ];
GMAT XYPlot1.RelativeZOrder = 96;
GMAT XYPlot1.Maximized = false;
GMAT XYPlot1.XVariable = DSN.UTCModJulian;
GMAT XYPlot1.YVariables = {Sat.EarthMJ2000Eq.X, GroundStation1.UTCModJulian};
GMAT XYPlot1.ShowGrid = true;
GMAT XYPlot1.ShowPlot = true;

Create EphemerisFile EphemerisFile1;
GMAT EphemerisFile1.UpperLeft = [ 0 0 ];
GMAT EphemerisFile1.Size = [ 0 0 ];
GMAT EphemerisFile1.RelativeZOrder = 0;
GMAT EphemerisFile1.Maximized = false;
GMAT EphemerisFile1.Spacecraft = Sat;
GMAT EphemerisFile1.Filename = 'EphemerisFile1.oem';
GMAT EphemerisFile1.FileFormat = CCSDS-OEM;
GMAT EphemerisFile1.EpochFormat = UTCGregorian;
GMAT EphemerisFile1.InitialEpoch = InitialSpacecraftEpoch;
GMAT EphemerisFile1.FinalEpoch = FinalSpacecraftEpoch;
GMAT EphemerisFile1.StepSize = IntegratorSteps;
GMAT EphemerisFile1.Interpolator = Lagrange;
GMAT EphemerisFile1.InterpolationOrder = 7;
GMAT EphemerisFile1.CoordinateSystem = MoonMJ2000Eq;
GMAT EphemerisFile1.OutputFormat = LittleEndian;
GMAT EphemerisFile1.IncludeCovariance = None;
GMAT EphemerisFile1.WriteEphemeris = true;

Create ReportFile ReportFile1;
GMAT ReportFile1.SolverIterations = Current;
GMAT ReportFile1.UpperLeft = [ 0 0 ];
GMAT ReportFile1.Size = [ 0 0 ];
GMAT ReportFile1.RelativeZOrder = 0;
GMAT ReportFile1.Maximized = false;
GMAT ReportFile1.Filename = 'ReportFile1.txt';
GMAT ReportFile1.Precision = 16;
GMAT ReportFile1.Add = {Sat.A1ModJulian, Sat.EarthMJ2000Eq.X};
GMAT ReportFile1.WriteHeaders = true;
GMAT ReportFile1.LeftJustify = On;
GMAT ReportFile1.ZeroFill = Off;
GMAT ReportFile1.FixedWidth = true;
GMAT ReportFile1.Delimiter = ' ';
GMAT ReportFile1.ColumnWidth = 23;
GMAT ReportFile1.WriteReport = true;

Create GroundTrackPlot GroundTrackPlot2;
GMAT GroundTrackPlot2.SolverIterations = Current;
GMAT GroundTrackPlot2.UpperLeft = [ 0.6245283018867924 0.4910714285714285 ];
GMAT GroundTrackPlot2.Size = [ 0.3849056603773585 0.4502551020408163 ];
GMAT GroundTrackPlot2.RelativeZOrder = 104;
GMAT GroundTrackPlot2.Maximized = false;
GMAT GroundTrackPlot2.Add = {DSN, Sat};
GMAT GroundTrackPlot2.DataCollectFrequency = 1;
GMAT GroundTrackPlot2.UpdatePlotFrequency = 50;
GMAT GroundTrackPlot2.NumPointsToRedraw = 0;
GMAT GroundTrackPlot2.ShowPlot = true;
GMAT GroundTrackPlot2.MaxPlotPoints = 20000;
GMAT GroundTrackPlot2.CentralBody = Luna;
GMAT GroundTrackPlot2.TextureMap = 'Moon_HermesCelestiaMotherlode.jpg';

Create OpenFramesInterface OpenFrames1;
GMAT OpenFrames1.SolverIterations = Current;
GMAT OpenFrames1.UpperLeft = [ 0.1707547169811321 0.2308673469387755 ];
GMAT OpenFrames1.Size = [ 0.5981132075471698 0.5969387755102041 ];
GMAT OpenFrames1.RelativeZOrder = 111;
GMAT OpenFrames1.Maximized = false;
GMAT OpenFrames1.Add = {Sat, Earth, Luna};
GMAT OpenFrames1.View = {NewView2};
GMAT OpenFrames1.Vector = {NewVector1};
GMAT OpenFrames1.CoordinateSystem = EarthMJ2000Eq;
GMAT OpenFrames1.DrawObject = [ true true true ];
GMAT OpenFrames1.DrawTrajectory = [ true true true ];
GMAT OpenFrames1.DrawAxes = [ false false false ];
GMAT OpenFrames1.DrawXYPlane = [ false false false ];
GMAT OpenFrames1.DrawLabel = [ true true true ];
GMAT OpenFrames1.DrawUsePropLabel = [ false false false ];
GMAT OpenFrames1.DrawCenterPoint = [ true false false ];
GMAT OpenFrames1.DrawEndPoints = [ true false false ];
GMAT OpenFrames1.DrawVelocity = [ false false false ];
GMAT OpenFrames1.DrawGrid = [ false false false ];
GMAT OpenFrames1.DrawLineWidth = [ 2 2 2 ];
GMAT OpenFrames1.DrawMarkerSize = [ 10 10 10 ];
GMAT OpenFrames1.DrawFontSize = [ 14 14 14 ];
GMAT OpenFrames1.Axes = On;
GMAT OpenFrames1.AxesLength = 1;
GMAT OpenFrames1.AxesLabels = On;
GMAT OpenFrames1.FrameLabel = Off;
GMAT OpenFrames1.XYPlane = On;
GMAT OpenFrames1.EclipticPlane = Off;
GMAT OpenFrames1.EnableStars = On;
GMAT OpenFrames1.StarCatalog = 'inp_StarsHYGv3.txt';
GMAT OpenFrames1.StarCount = 40000;
GMAT OpenFrames1.MinStarMag = -2;
GMAT OpenFrames1.MaxStarMag = 6;
GMAT OpenFrames1.MinStarPixels = 1;
GMAT OpenFrames1.MaxStarPixels = 10;
GMAT OpenFrames1.MinStarDimRatio = 0.5;
GMAT OpenFrames1.ShowPlot = true;
GMAT OpenFrames1.ShowToolbar = true;
GMAT OpenFrames1.SolverIterLastN = 1;
GMAT OpenFrames1.ShowVR = false;
GMAT OpenFrames1.PlaybackTimeScale = 3600;
GMAT OpenFrames1.MultisampleAntiAliasing = On;
GMAT OpenFrames1.MSAASamples = 2;
GMAT OpenFrames1.DrawFontPosition = {'Top-Right', 'Top-Right', 'Top-Right'};

Create DynamicDataDisplay DynamicDataDisplay1;
GMAT DynamicDataDisplay1.UpperLeft = [ 0.3622641509433962 0.6071428571428571 ];
GMAT DynamicDataDisplay1.Size = [ 0.5009433962264151 0.1951530612244898 ];
GMAT DynamicDataDisplay1.RelativeZOrder = 100;
GMAT DynamicDataDisplay1.Maximized = false;
GMAT DynamicDataDisplay1.AddParameters = {1, '', ''};
GMAT DynamicDataDisplay1.AddParameters = {2, '', ''};
GMAT DynamicDataDisplay1.RowTextColors = {1, [0 0 0], [0 0 0]};
GMAT DynamicDataDisplay1.RowTextColors = {2, [0 0 0], [0 0 0]};
GMAT DynamicDataDisplay1.WarnColor = [218 165 32];
GMAT DynamicDataDisplay1.CritColor = [255 0 0];

%----------------------------------------
%---------- User Objects
%----------------------------------------

Create OpenFramesVector NewVector1;
GMAT NewVector1.VectorColor = [255 0 0];
GMAT NewVector1.SourceObject = Sat;
GMAT NewVector1.VectorType = Relative Position;
GMAT NewVector1.DestinationObject = Sat;
GMAT NewVector1.VectorLabel = 'DefaultVector';
GMAT NewVector1.VectorLengthType = 'Auto';

Create OpenFramesView NewView2;
GMAT NewView2.ViewFrame = Sat;
GMAT NewView2.ViewTrajectory = Off;
GMAT NewView2.InertialFrame = Off;
GMAT NewView2.LookAtFrame = Earth;
GMAT NewView2.ShortestAngle = Off;
GMAT NewView2.SetDefaultLocation = Off;
GMAT NewView2.SetCurrentLocation = On;
GMAT NewView2.CurrentEye = [ 55.70962182246363 -53.63892374956182 19.33045601421399 ];
GMAT NewView2.CurrentCenter = [ 0 9.536743377225321e-07 0 ];
GMAT NewView2.CurrentUp = [ 0.2171745243595432 0.5226619359994058 0.8244147782679295 ];
GMAT NewView2.FOVy = 45;

%**************************************************************************
%**************************The Mission Sequence****************************
%**************************************************************************

BeginMissionSequence;

%------------------------------
%  Propagate to Earth periapsis
%------------------------------

Propagate 'Prop to Perigee' EarthFull(Sat) {Sat.Periapsis};


%------------------------------
%  Target Lunar B-plane
%------------------------------
Target 'Target B-Plane' DC1 {SolveMode = Solve, ExitMode = DiscardAndContinue, ShowProgressWindow = true};
   
   Vary 'Vary TOI.V' DC1(TOI.Element1 = 0.14, {Perturbation = 1e-005, Lower = .13, Upper = .5, MaxStep = .01, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   Vary 'Vary TOI.B' DC1(TOI.Element3 = 0.1, {Perturbation = 1e-005, Lower = -.5, Upper = .5, MaxStep = .01, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   Maneuver 'Apply TOI' TOI(Sat);
   
   Propagate 'Prop to Moon SOI' EarthFull(Sat) {Sat.Earth.RMAG = 325000, StopTolerance = 1e-05};
   Propagate 'Prop to Periselene' MoonFull(Sat) {Sat.Luna.Periapsis, StopTolerance = 1e-05};
   
   Achieve 'Achieve BdotR' DC1(Sat.MoonMJ2000Eq.BdotT = 15000.4401777, {Tolerance = 3});
   Achieve 'Achieve BdotT' DC1(Sat.MoonMJ2000Eq.BdotR = 4000.59308992, {Tolerance = 3});
   %Achieve DC1(Sat.RMAG = 390000 , {Tolerance = 200000}); 
   
EndTarget;  % For targeter DC1

%------------------------------
% Target to orbit the Moon
%------------------------------
Target 'Target Lunar Insertion' DC1 {SolveMode = Solve, ExitMode = DiscardAndContinue, ShowProgressWindow = true};
   
   Vary 'Vary LOI.V' DC1(LOI.Element1 = -0.65198120104, {Perturbation = 1e-003, Lower = -3, Upper = 0, MaxStep = .3, AdditiveScaleFactor = 0.0, MultiplicativeScaleFactor = 1.0});
   
   Maneuver 'Apply LOI' LOI(Sat);
   
   Achieve 'Achieve ECC = 0' DC1(Sat.Luna.ECC = 0, {Tolerance = 0.0001});
   
EndTarget;  % For targeter DC1


%------------------------------
% Propagate for a few days
%------------------------------
Propagate 'Prop 15 days' MoonFull(Sat) {Sat.ElapsedDays = 15};
